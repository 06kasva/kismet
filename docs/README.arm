Kismet ARM Support

Kismet has been tested on the following ARM based handhelds:
Sharp Zaurus with Linksys WFC11 card.
Sharp Zaurus with SMC card.
Compaq IPAQ (see ipaq instructions) with assorted cards.

* Zaurus Installation
All CF form-factor wireless cards I'm aware of are Prism2 based.  As of the
time of this release, the version of wlan-ng shipped with the Zaurus only
supports the 'prism2' capture method and can't use pcap.

* IPAQ Installation
Depending on the version of the Familiar distribution installed on your Ipaq,
the version of the wlan-ng drivers may not support sniffing.  If you get errors
that enabling monitor mode is not supported, you'll need to update your 
Familiar install or compile them yourself in a cross-build environment.

As of Familiar 0.5.3, Lucent/Orinoco cards do not support RFMON (PF_PACKET) and
as such, cannot be used with Kismet without patching.  As of 8/28/02, Jamey
Hicks who maintains the Familiar distribution promises future releases of
Familiar will include Snax's patch for the orinoco_cs drivers.

Familiar users with Cisco cards will need to set their kismet.conf file to use
a cardtype of "cisco_cvs", with a capinterface of "wifi0".

Some Familiar installs also do not include the latest ncurses and panels 
libraries - these can be obtained from the Skif cluster (telnet to 
ipaq3.handhelds.org and copy the /lib/libpanel.so.5 and /lib/libncurses.so.5.0
files to your ipaq).  You may also need to install the GNU stdc++ libraries
by running "ipkg install libstdc++2.01-glibc2.2".

Configure your card just as you would on an intel system - with the PCMCIA 
sleeve, all the standard cards function and must be configured as they
would be on any other system.

* Compiling it yourself
Pass the appropriate cross-build to configure, I use 
'./configure --host=arm-linux --disable-pcap --enable-zaurus \
	--disable-setuid' to build for the Zaurus, and
'ac_cv_linux_vers=2.4.16 ./configure --host=arm-linux --with-pcap=linux \
	--disable-setuid' to build for the iPaq.  Set ac_cv_linux_vers 
accordingly to match your system.

Some versions of GCC appear to generate incorrect alignments when optimization
is turned on.  If you experience bus errors under arm, try removing the -O2 
from the CXXFLAGS in the Makefile and recompiling.

I used the Zaurus cross-build environment from 
http://www.lart.tudelft.nl/lartware/compile-tools/ 
and the Skif cluster environment for Ipaq.

